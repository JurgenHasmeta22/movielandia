model Season {
    id           Int    @id @default(autoincrement())
    title        String @default("Season")
    photoSrc     String @default("")
    photoSrcProd String @default("")
    trailerSrc   String @default("")
    description  String @default("Season desc")
    dateAired    String @default("01/01/1990")
    ratingImdb   Float  @default(1.0)

    // FK Keys
    serieId Int @default(1)

    // Relations
    serie    Serie     @relation(fields: [serieId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    episodes Episode[]

    usersWhoBookmarkedIt UserSeasonFavorite[]
    usersWhoRatedIt      UserSeasonRating[]
    reviews              SeasonReview[]
    UpvoteSeasonReview   UpvoteSeasonReview[]
    DownvoteSeasonReview DownvoteSeasonReview[]
}

model SeasonReview {
    id        Int       @id @default(autoincrement())
    content   String?
    rating    Float?
    createdAt DateTime  @default(now())
    updatedAt DateTime?

    // FK Keys
    userId   Int
    seasonId Int

    // Relations
    user      User                   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    season    Season                 @relation(fields: [seasonId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    upvotes   UpvoteSeasonReview[]
    downvotes DownvoteSeasonReview[]

    @@unique([userId, seasonId])
}

model UpvoteSeasonReview {
    id Int @id @default(autoincrement())

    // FK Keys
    userId         Int
    seasonId       Int
    seasonReviewId Int

    // Relations
    user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
    season       Season        @relation(fields: [seasonId], references: [id], onDelete: Cascade)
    seasonReview SeasonReview? @relation(fields: [seasonReviewId], references: [id], onDelete: Cascade)

    @@unique([userId, seasonId, seasonReviewId])
}

model DownvoteSeasonReview {
    id Int @id @default(autoincrement())

    // FK Keys
    userId         Int
    seasonId       Int
    seasonReviewId Int

    // Relations
    user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
    season       Season        @relation(fields: [seasonId], references: [id], onDelete: Cascade)
    seasonReview SeasonReview? @relation(fields: [seasonReviewId], references: [id], onDelete: Cascade)

    @@unique([userId, seasonId, seasonReviewId])
}
