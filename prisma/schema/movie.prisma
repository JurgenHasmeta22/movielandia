model Movie {
    id                   Int                   @id @default(autoincrement())
    title                String                @default("")
    photoSrc             String                @default("")
    photoSrcProd         String                @default("")
    trailerSrc           String                @default("")
    duration             Int                   @default(100)
    ratingImdb           Float                 @default(5.0)
    dateAired            String                @default("11/12/2005")
    description          String                @default("")
    cast                 CastMovie[]
    genres               MovieGenre[]
    reviews              MovieReview[]
    usersWhoBookmarkedIt UserMovieFavorite[]
    usersWhoRatedIt      UserMovieRating[]
    upvoteMovieReviews   UpvoteMovieReview[]
    downvoteMovieReviews DownvoteMovieReview[]
}

model CastMovie {
    id      Int   @id @default(autoincrement())
    movieId Int
    actorId Int
    movie   Movie @relation(fields: [movieId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    actor   Actor @relation(fields: [actorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model MovieGenre {
    id      Int   @id @default(autoincrement())
    movieId Int
    genreId Int
    movie   Movie @relation(fields: [movieId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    genre   Genre @relation(fields: [genreId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model MovieReview {
    id        Int                   @id @default(autoincrement())
    content   String                @default("")
    rating    Float?
    createdAt DateTime              @default(now())
    updatedAt DateTime?
    userId Int
    movieId   Int
    user      User                  @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    movie     Movie                 @relation(fields: [movieId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    upvotes   UpvoteMovieReview[]
    downvotes DownvoteMovieReview[]
}

model UpvoteMovieReview {
    id            Int          @id @default(autoincrement())
    userId Int
    movieId       Int
    movieReviewId Int
    user          User         @relation(fields: [userId], references: [id], onDelete: Cascade)
    movie         Movie        @relation(fields: [movieId], references: [id], onDelete: Cascade)
    movieReview   MovieReview? @relation(fields: [movieReviewId], references: [id], onDelete: Cascade)
}

model DownvoteMovieReview {
    id            Int          @id @default(autoincrement())
    userId Int
    movieId       Int
    movieReviewId Int
    user          User         @relation(fields: [userId], references: [id], onDelete: Cascade)
    movie         Movie        @relation(fields: [movieId], references: [id], onDelete: Cascade)
    movieReview   MovieReview? @relation(fields: [movieReviewId], references: [id], onDelete: Cascade)
}