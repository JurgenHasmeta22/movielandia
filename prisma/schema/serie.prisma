model Serie {
    id           Int    @id @default(autoincrement())
    title        String @default("")
    photoSrc     String @default("")
    photoSrcProd String @default("")
    trailerSrc   String @default("")
    description  String @default("")
    dateAired    String @default("01/01/2020")
    ratingImdb   Float  @default(5.0)

    // Relations
    cast    CastSerie[]
    crew    CrewSerie[]
    seasons Season[]
    reviews SerieReview[]
    genres  SerieGenre[]

    usersWhoBookmarkedIt UserSerieFavorite[]
    usersWhoRatedIt      UserSerieRating[]

    upvoteSerieReviews   UpvoteSerieReview[]
    downvoteSerieReviews DownvoteSerieReview[]
}

model UpvoteSerieReview {
    id Int @id @default(autoincrement())

    // FK Keys
    userId        Int
    serieId       Int
    serieReviewId Int

    // Relations
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    serie       Serie        @relation(fields: [serieId], references: [id], onDelete: Cascade)
    serieReview SerieReview? @relation(fields: [serieReviewId], references: [id], onDelete: Cascade)

    @@unique([userId, serieId, serieReviewId])
}

model DownvoteSerieReview {
    id Int @id @default(autoincrement())

    // FK Keys
    userId        Int
    serieId       Int
    serieReviewId Int

    // Relations
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    serie       Serie        @relation(fields: [serieId], references: [id], onDelete: Cascade)
    serieReview SerieReview? @relation(fields: [serieReviewId], references: [id], onDelete: Cascade)

    @@unique([userId, serieId, serieReviewId])
}

model SerieReview {
    id        Int       @id @default(autoincrement())
    content   String?
    rating    Float?
    createdAt DateTime  @default(now())
    updatedAt DateTime?

    // FK Keys
    userId  Int
    serieId Int

    // Relations
    user  User  @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    serie Serie @relation(fields: [serieId], references: [id], onDelete: Cascade, onUpdate: Cascade)

    upvotes   UpvoteSerieReview[]
    downvotes DownvoteSerieReview[]

    @@unique([userId, serieId])
}

model SerieGenre {
    id Int @id @default(autoincrement())

    // FK Keys
    serieId Int
    genreId Int

    // Relations
    serie Serie @relation(fields: [serieId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    genre Genre @relation(fields: [genreId], references: [id], onDelete: Cascade, onUpdate: Cascade)

    @@unique([serieId, genreId])
}

model CastSerie {
    id Int @id @default(autoincrement())

    // FK Keys
    serieId Int
    actorId Int

    // Relations
    serie Serie @relation(fields: [serieId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    actor Actor @relation(fields: [actorId], references: [id], onDelete: Cascade, onUpdate: Cascade)

    @@unique([serieId, actorId])
}

model CrewSerie {
    id Int @id @default(autoincrement())

    // FK Keys
    serieId Int
    crewId  Int

    // Relations
    serie Serie @relation(fields: [serieId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    crew  Crew  @relation(fields: [crewId], references: [id], onDelete: Cascade, onUpdate: Cascade)

    @@unique([serieId, crewId])
}
