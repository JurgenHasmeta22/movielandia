//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table Actor {
  id Int [pk, increment]
  fullname String [not null]
  photoSrc String [not null]
  photoSrcProd String [not null]
  description String [not null]
  debut String [not null]
  listItems ListActor [not null]
  listActivities ListActivityActor [not null]
  starredMovies CastMovie [not null]
  starredSeries CastSerie [not null]
  reviews ActorReview [not null]
  usersWhoRatedIt UserActorRating [not null]
  usersWhoBookmarkedIt UserActorFavorite [not null]
  upvoteActorReviews UpvoteActorReview [not null]
  downvoteActorReviews DownvoteActorReview [not null]
}

Table ActorReview {
  id Int [pk, increment]
  content String
  rating Float
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime
  userId Int [not null]
  actorId Int [not null]
  user User [not null]
  actor Actor [not null]
  upvotes UpvoteActorReview [not null]
  downvotes DownvoteActorReview [not null]

  indexes {
    (userId, actorId) [unique]
  }
}

Table UpvoteActorReview {
  id Int [pk, increment]
  userId Int [not null]
  actorId Int [not null]
  actorReviewId Int [not null]
  user User [not null]
  actor Actor [not null]
  actorReview ActorReview

  indexes {
    (userId, actorId, actorReviewId) [unique]
  }
}

Table DownvoteActorReview {
  id Int [pk, increment]
  userId Int [not null]
  actorId Int [not null]
  actorReviewId Int [not null]
  user User [not null]
  actor Actor [not null]
  actorReview ActorReview

  indexes {
    (userId, actorId, actorReviewId) [unique]
  }
}

Table Account {
  id String [pk]
  type String [not null]
  provider String [not null]
  refresh_token String
  access_token String
  expires_at Int
  token_type String
  scope String
  id_token String
  session_state String
  userId Int [not null]
  providerAccountId String [not null]
  user User [not null]

  indexes {
    (provider, providerAccountId) [unique]
  }
}

Table Session {
  id String [pk]
  sessionToken String [unique, not null]
  expires DateTime [not null]
  userId Int [not null]
  user User [not null]
}

Table VerificationToken {
  identifier String [not null]
  token String [unique, not null]
  expires DateTime [not null]

  indexes {
    (identifier, token) [unique]
  }
}

Table ActivateToken {
  id Int [pk, increment]
  token String [unique, not null]
  createdAt DateTime [default: `now()`, not null]
  activatedAt DateTime
  userId Int [not null]
  user User [not null]
}

Table ResetPasswordToken {
  id Int [pk, increment]
  token String [unique, not null]
  createdAt DateTime [default: `now()`, not null]
  resetPasswordAt DateTime
  userId Int [not null]
  user User [not null]
}

Table Crew {
  id Int [pk, increment]
  fullname String [not null]
  photoSrc String [not null]
  role String [not null]
  photoSrcProd String [not null]
  description String [not null]
  debut String [not null]
  listItems ListCrew [not null]
  listActivities ListActivityCrew [not null]
  producedMovies CrewMovie [not null]
  producedSeries CrewSerie [not null]
  reviews CrewReview [not null]
  usersWhoRatedIt UserCrewRating [not null]
  usersWhoBookmarkedIt UserCrewFavorite [not null]
  upvoteCrewReviews UpvoteCrewReview [not null]
  downvoteCrewReviews DownvoteCrewReview [not null]
}

Table CrewReview {
  id Int [pk, increment]
  content String
  rating Float
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime
  userId Int [not null]
  crewId Int [not null]
  user User [not null]
  crew Crew [not null]
  upvotes UpvoteCrewReview [not null]
  downvotes DownvoteCrewReview [not null]

  indexes {
    (userId, crewId) [unique]
  }
}

Table UpvoteCrewReview {
  id Int [pk, increment]
  userId Int [not null]
  crewId Int [not null]
  crewReviewId Int [not null]
  user User [not null]
  crew Crew [not null]
  crewReview CrewReview

  indexes {
    (userId, crewId, crewReviewId) [unique]
  }
}

Table DownvoteCrewReview {
  id Int [pk, increment]
  userId Int [not null]
  crewId Int [not null]
  crewReviewId Int [not null]
  user User [not null]
  crew Crew [not null]
  crewReview CrewReview

  indexes {
    (userId, crewId, crewReviewId) [unique]
  }
}

Table Episode {
  id Int [pk, increment]
  title String [not null]
  photoSrc String [not null]
  photoSrcProd String [not null]
  trailerSrc String [not null]
  description String [not null]
  duration Int [not null]
  dateAired DateTime
  ratingImdb Float [not null]
  seasonId Int [not null]
  season Season [not null]
  listItems ListEpisode [not null]
  listActivities ListActivityEpisode [not null]
  usersWhoBookmarkedIt UserEpisodeFavorite [not null]
  usersWhoRatedIt UserEpisodeRating [not null]
  reviews EpisodeReview [not null]
  upvoteEpisodeReviews UpvoteEpisodeReview [not null]
  downvoteEpisodeReviews DownvoteEpisodeReview [not null]
}

Table EpisodeReview {
  id Int [pk, increment]
  content String
  rating Float
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime
  userId Int [not null]
  episodeId Int [not null]
  user User [not null]
  episode Episode [not null]
  upvotes UpvoteEpisodeReview [not null]
  downvotes DownvoteEpisodeReview [not null]

  indexes {
    (userId, episodeId) [unique]
  }
}

Table UpvoteEpisodeReview {
  id Int [pk, increment]
  userId Int [not null]
  episodeId Int [not null]
  episodeReviewId Int [not null]
  user User [not null]
  episode Episode [not null]
  episodeReview EpisodeReview

  indexes {
    (userId, episodeId, episodeReviewId) [unique]
  }
}

Table DownvoteEpisodeReview {
  id Int [pk, increment]
  userId Int [not null]
  episodeId Int [not null]
  episodeReviewId Int [not null]
  user User [not null]
  episode Episode [not null]
  episodeReview EpisodeReview

  indexes {
    (userId, episodeId, episodeReviewId) [unique]
  }
}

Table ForumCategory {
  id Int [pk, increment]
  name String [not null]
  description String [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  order Int [not null, default: 0]
  isActive Boolean [not null, default: true]
  slug String [unique, not null]
  topicCount Int [not null, default: 0]
  postCount Int [not null, default: 0]
  lastPostAt DateTime
  lastPostId Int [unique]
  lastPost ForumPost
  topics ForumTopic [not null]
  moderators UserForumModerator [not null]
}

Table UserForumModerator {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  userId Int [not null]
  categoryId Int [not null]
  user User [not null]
  category ForumCategory [not null]

  indexes {
    (userId, categoryId) [unique]
  }
}

Table ForumPost {
  id Int [pk, increment]
  content String [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime
  isEdited Boolean [not null, default: false]
  editCount Int [not null, default: 0]
  lastEditAt DateTime
  isModerated Boolean [not null, default: false]
  slug String [unique, not null]
  type PostType [not null, default: 'Normal']
  isAnswer Boolean [not null, default: false]
  isDeleted Boolean [not null, default: false]
  answeredAt DateTime
  deletedAt DateTime
  topicId Int [not null]
  userId Int [not null]
  answeredById Int
  deletedById Int
  topic ForumTopic [not null]
  user User [not null]
  answeredBy User
  deletedBy User
  attachments Attachment [not null]
  replies ForumReply [not null]
  upvotes UpvoteForumPost [not null]
  downvotes DownvoteForumPost [not null]
  history ForumPostHistory [not null]
  lastPostCategory ForumCategory
}

Table Attachment {
  id Int [pk, increment]
  filename String [not null]
  fileUrl String [not null]
  fileSize Int [not null]
  mimeType String [not null]
  uploadedAt DateTime [default: `now()`, not null]
  isPublic Boolean [not null, default: true]
  description String
  postId Int [not null]
  userId Int [not null]
  user User [not null]
  post ForumPost [not null]
}

Table UpvoteForumPost {
  id Int [pk, increment]
  userId Int [not null]
  postId Int [not null]
  user User [not null]
  post ForumPost [not null]

  indexes {
    (userId, postId) [unique]
  }
}

Table DownvoteForumPost {
  id Int [pk, increment]
  userId Int [not null]
  postId Int [not null]
  user User [not null]
  post ForumPost [not null]

  indexes {
    (userId, postId) [unique]
  }
}

Table ForumPostHistory {
  id Int [pk, increment]
  content String [not null]
  editedAt DateTime [default: `now()`, not null]
  postId Int [not null]
  editedById Int [not null]
  post ForumPost [not null]
  editedBy User [not null]
}

Table ForumReply {
  id Int [pk, increment]
  content String [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime
  isEdited Boolean [not null, default: false]
  editCount Int [not null, default: 0]
  lastEditAt DateTime
  isModerated Boolean [not null, default: false]
  postId Int [not null]
  userId Int [not null]
  post ForumPost [not null]
  user User [not null]
  upvotes UpvoteForumReply [not null]
  downvotes DownvoteForumReply [not null]
  history ForumReplyHistory [not null]
}

Table UpvoteForumReply {
  id Int [pk, increment]
  userId Int [not null]
  replyId Int [not null]
  user User [not null]
  reply ForumReply [not null]

  indexes {
    (userId, replyId) [unique]
  }
}

Table DownvoteForumReply {
  id Int [pk, increment]
  userId Int [not null]
  replyId Int [not null]
  user User [not null]
  reply ForumReply [not null]

  indexes {
    (userId, replyId) [unique]
  }
}

Table ForumReplyHistory {
  id Int [pk, increment]
  content String [not null]
  editedAt DateTime [default: `now()`, not null]
  replyId Int [not null]
  editedById Int [not null]
  reply ForumReply [not null]
  editedBy User [not null]
}

Table ForumTag {
  id Int [pk, increment]
  name String [unique, not null]
  description String
  color String
  createdAt DateTime [default: `now()`, not null]
  topics ForumTopic [not null]
}

Table ForumTopic {
  id Int [pk, increment]
  title String [not null]
  content String [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  isPinned Boolean [not null, default: false]
  isLocked Boolean [not null, default: false]
  slug String [unique, not null]
  viewCount Int [not null, default: 0]
  lastPostAt DateTime [default: `now()`, not null]
  isModerated Boolean [not null, default: false]
  closedAt DateTime
  status TopicStatus [not null, default: 'Open']
  closedById Int
  categoryId Int [not null]
  userId Int [not null]
  closedBy User
  tags ForumTag [not null]
  category ForumCategory [not null]
  user User [not null]
  posts ForumPost [not null]
  usersWhoBookmarkedIt UserForumTopicFavorite [not null]
  upvotes UpvoteForumTopic [not null]
  downvotes DownvoteForumTopic [not null]
  watchers UserForumTopicWatch [not null]
}

Table UserForumTopicWatch {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  userId Int [not null]
  topicId Int [not null]
  user User [not null]
  topic ForumTopic [not null]

  indexes {
    (userId, topicId) [unique]
  }
}

Table UserForumTopicFavorite {
  id Int [pk, increment]
  userId Int [not null]
  topicId Int [not null]
  user User [not null]
  topic ForumTopic [not null]

  indexes {
    (userId, topicId) [unique]
  }
}

Table UpvoteForumTopic {
  id Int [pk, increment]
  userId Int [not null]
  topicId Int [not null]
  user User [not null]
  topic ForumTopic [not null]

  indexes {
    (userId, topicId) [unique]
  }
}

Table DownvoteForumTopic {
  id Int [pk, increment]
  userId Int [not null]
  topicId Int [not null]
  user User [not null]
  topic ForumTopic [not null]

  indexes {
    (userId, topicId) [unique]
  }
}

Table Genre {
  id Int [pk, increment]
  name String [not null]
  movies MovieGenre [not null]
  series SerieGenre [not null]
  usersWhoBookmarkedIt UserGenreFavorite [not null]
}

Table List {
  id Int [pk, increment]
  name String [not null]
  description String
  isPrivate Boolean [not null, default: false]
  isArchived Boolean [not null, default: false]
  isDefault Boolean [not null, default: false]
  createdAt DateTime [default: `now()`, not null]
  contentType ContentType
  updatedAt DateTime [not null]
  lastViewedAt DateTime
  userId Int [not null]
  user User [not null]
  movieItems ListMovie [not null]
  serieItems ListSerie [not null]
  seasonItems ListSeason [not null]
  episodeItems ListEpisode [not null]
  actorItems ListActor [not null]
  crewItems ListCrew [not null]
  sharedWith ListShare [not null]
  movieActivities ListActivityMovie [not null]
  serieActivities ListActivitySerie [not null]
  seasonActivities ListActivitySeason [not null]
  episodeActivities ListActivityEpisode [not null]
  actorActivities ListActivityActor [not null]
  crewActivities ListActivityCrew [not null]
}

Table ListShare {
  id Int [pk, increment]
  canEdit Boolean [not null, default: false]
  sharedAt DateTime [default: `now()`, not null]
  listId Int [not null]
  userId Int [not null]
  list List [not null]
  user User [not null]

  indexes {
    (listId, userId) [unique]
  }
}

Table ListMovie {
  id Int [pk, increment]
  addedAt DateTime [default: `now()`, not null]
  note String
  orderIndex Int [not null, default: 0]
  listId Int [not null]
  movieId Int [not null]
  userId Int [not null]
  list List [not null]
  movie Movie [not null]
  user User [not null]

  indexes {
    (listId, movieId) [unique]
  }
}

Table ListSerie {
  id Int [pk, increment]
  addedAt DateTime [default: `now()`, not null]
  note String
  orderIndex Int [not null, default: 0]
  listId Int [not null]
  serieId Int [not null]
  userId Int [not null]
  list List [not null]
  serie Serie [not null]
  user User [not null]

  indexes {
    (listId, serieId) [unique]
  }
}

Table ListSeason {
  id Int [pk, increment]
  addedAt DateTime [default: `now()`, not null]
  note String
  orderIndex Int [not null, default: 0]
  listId Int [not null]
  seasonId Int [not null]
  userId Int [not null]
  list List [not null]
  season Season [not null]
  user User [not null]

  indexes {
    (listId, seasonId) [unique]
  }
}

Table ListEpisode {
  id Int [pk, increment]
  addedAt DateTime [default: `now()`, not null]
  note String
  orderIndex Int [not null, default: 0]
  listId Int [not null]
  episodeId Int [not null]
  userId Int [not null]
  list List [not null]
  episode Episode [not null]
  user User [not null]

  indexes {
    (listId, episodeId) [unique]
  }
}

Table ListActor {
  id Int [pk, increment]
  addedAt DateTime [default: `now()`, not null]
  note String
  orderIndex Int [not null, default: 0]
  listId Int [not null]
  actorId Int [not null]
  userId Int [not null]
  list List [not null]
  actor Actor [not null]
  user User [not null]

  indexes {
    (listId, actorId) [unique]
  }
}

Table ListCrew {
  id Int [pk, increment]
  addedAt DateTime [default: `now()`, not null]
  note String
  orderIndex Int [not null, default: 0]
  listId Int [not null]
  crewId Int [not null]
  userId Int [not null]
  list List [not null]
  crew Crew [not null]
  user User [not null]

  indexes {
    (listId, crewId) [unique]
  }
}

Table ListActivityMovie {
  id Int [pk, increment]
  actionType ListActionType [not null]
  metadata Json
  createdAt DateTime [default: `now()`, not null]
  listId Int [not null]
  movieId Int [not null]
  userId Int [not null]
  list List [not null]
  movie Movie [not null]
  user User [not null]
}

Table ListActivitySerie {
  id Int [pk, increment]
  actionType ListActionType [not null]
  metadata Json
  createdAt DateTime [default: `now()`, not null]
  listId Int [not null]
  serieId Int [not null]
  userId Int [not null]
  list List [not null]
  serie Serie [not null]
  user User [not null]
}

Table ListActivitySeason {
  id Int [pk, increment]
  actionType ListActionType [not null]
  metadata Json
  createdAt DateTime [default: `now()`, not null]
  listId Int [not null]
  seasonId Int [not null]
  userId Int [not null]
  list List [not null]
  season Season [not null]
  user User [not null]
}

Table ListActivityEpisode {
  id Int [pk, increment]
  actionType ListActionType [not null]
  metadata Json
  createdAt DateTime [default: `now()`, not null]
  listId Int [not null]
  episodeId Int [not null]
  userId Int [not null]
  list List [not null]
  episode Episode [not null]
  user User [not null]
}

Table ListActivityActor {
  id Int [pk, increment]
  actionType ListActionType [not null]
  metadata Json
  createdAt DateTime [default: `now()`, not null]
  listId Int [not null]
  actorId Int [not null]
  userId Int [not null]
  list List [not null]
  actor Actor [not null]
  user User [not null]
}

Table ListActivityCrew {
  id Int [pk, increment]
  actionType ListActionType [not null]
  metadata Json
  createdAt DateTime [default: `now()`, not null]
  listId Int [not null]
  crewId Int [not null]
  userId Int [not null]
  list List [not null]
  crew Crew [not null]
  user User [not null]
}

Table Inbox {
  id Int [pk, increment]
  participants UserInbox [not null]
  messages Message [not null]
}

Table Message {
  id Int [pk, increment]
  text String [not null]
  createdAt DateTime [default: `now()`, not null]
  read Boolean [not null, default: false]
  editedAt DateTime
  senderId Int [not null]
  receiverId Int [not null]
  inboxId Int [not null]
  receiver User [not null]
  sender User [not null]
  inbox Inbox [not null]
}

Table UserInbox {
  id Int [pk, increment]
  userId Int [not null]
  inboxId Int [not null]
  user User [not null]
  inbox Inbox [not null]

  indexes {
    (userId, inboxId) [unique]
  }
}

Table ReportedContent {
  id Int [pk, increment]
  reportType ReportType [not null]
  reason String
  createdAt DateTime [default: `now()`, not null]
  status ReportStatus [not null, default: 'Pending']
  resolutionDetails String
  contentId Int [not null]
  reportingUserId Int [not null]
  reportedUserId Int
  reportingUser User [not null]
  reportedUser User
}

Table ModerationLog {
  id Int [pk, increment]
  actionType ModerationAction [not null]
  timestamp DateTime [default: `now()`, not null]
  details String
  moderatorUserId Int [not null]
  targetUserId Int
  targetContentId Int
  moderatorUser User [not null]
  targetUser User
}

Table Movie {
  id Int [pk, increment]
  title String [not null]
  photoSrc String [not null]
  photoSrcProd String [not null]
  trailerSrc String [not null]
  duration Int [not null]
  ratingImdb Float [not null]
  dateAired DateTime
  description String [not null]
  cast CastMovie [not null]
  crew CrewMovie [not null]
  genres MovieGenre [not null]
  reviews MovieReview [not null]
  usersWhoBookmarkedIt UserMovieFavorite [not null]
  usersWhoRatedIt UserMovieRating [not null]
  upvoteMovieReviews UpvoteMovieReview [not null]
  downvoteMovieReviews DownvoteMovieReview [not null]
  listItems ListMovie [not null]
  listActivities ListActivityMovie [not null]
}

Table MovieReview {
  id Int [pk, increment]
  content String
  rating Float
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime
  userId Int [not null]
  movieId Int [not null]
  user User [not null]
  movie Movie [not null]
  upvotes UpvoteMovieReview [not null]
  downvotes DownvoteMovieReview [not null]
}

Table UpvoteMovieReview {
  id Int [pk, increment]
  userId Int [not null]
  movieId Int [not null]
  movieReviewId Int [not null]
  user User [not null]
  movie Movie [not null]
  movieReview MovieReview

  indexes {
    (userId, movieId, movieReviewId) [unique]
  }
}

Table DownvoteMovieReview {
  id Int [pk, increment]
  userId Int [not null]
  movieId Int [not null]
  movieReviewId Int [not null]
  user User [not null]
  movie Movie [not null]
  movieReview MovieReview

  indexes {
    (userId, movieId, movieReviewId) [unique]
  }
}

Table CastMovie {
  id Int [pk, increment]
  movieId Int [not null]
  actorId Int [not null]
  movie Movie [not null]
  actor Actor [not null]

  indexes {
    (movieId, actorId) [unique]
  }
}

Table CrewMovie {
  id Int [pk, increment]
  movieId Int [not null]
  crewId Int [not null]
  movie Movie [not null]
  crew Crew [not null]

  indexes {
    (crewId, movieId) [unique]
  }
}

Table MovieGenre {
  id Int [pk, increment]
  movieId Int [not null]
  genreId Int [not null]
  movie Movie [not null]
  genre Genre [not null]

  indexes {
    (genreId, movieId) [unique]
  }
}

Table Notification {
  id Int [pk, increment]
  type NotificationType [not null]
  content String [not null]
  status NotificationStatus [not null, default: 'unread']
  createdAt DateTime [default: `now()`, not null]
  userId Int [not null]
  senderId Int [not null]
  user User [not null]
  sender User [not null]
}

Table Season {
  id Int [pk, increment]
  title String [not null]
  photoSrc String [not null]
  photoSrcProd String [not null]
  trailerSrc String [not null]
  description String [not null]
  dateAired DateTime
  ratingImdb Float [not null]
  serieId Int [not null]
  serie Serie [not null]
  episodes Episode [not null]
  usersWhoBookmarkedIt UserSeasonFavorite [not null]
  usersWhoRatedIt UserSeasonRating [not null]
  reviews SeasonReview [not null]
  upvoteSeasonReviews UpvoteSeasonReview [not null]
  downvoteSeasonReviews DownvoteSeasonReview [not null]
  listItems ListSeason [not null]
  listActivities ListActivitySeason [not null]
}

Table SeasonReview {
  id Int [pk, increment]
  content String
  rating Float
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime
  userId Int [not null]
  seasonId Int [not null]
  user User [not null]
  season Season [not null]
  upvotes UpvoteSeasonReview [not null]
  downvotes DownvoteSeasonReview [not null]

  indexes {
    (userId, seasonId) [unique]
  }
}

Table UpvoteSeasonReview {
  id Int [pk, increment]
  userId Int [not null]
  seasonId Int [not null]
  seasonReviewId Int [not null]
  user User [not null]
  season Season [not null]
  seasonReview SeasonReview

  indexes {
    (userId, seasonId, seasonReviewId) [unique]
  }
}

Table DownvoteSeasonReview {
  id Int [pk, increment]
  userId Int [not null]
  seasonId Int [not null]
  seasonReviewId Int [not null]
  user User [not null]
  season Season [not null]
  seasonReview SeasonReview

  indexes {
    (userId, seasonId, seasonReviewId) [unique]
  }
}

Table Serie {
  id Int [pk, increment]
  title String [not null]
  photoSrc String [not null]
  photoSrcProd String [not null]
  trailerSrc String [not null]
  description String [not null]
  dateAired DateTime
  ratingImdb Float [not null]
  cast CastSerie [not null]
  crew CrewSerie [not null]
  seasons Season [not null]
  reviews SerieReview [not null]
  genres SerieGenre [not null]
  usersWhoBookmarkedIt UserSerieFavorite [not null]
  usersWhoRatedIt UserSerieRating [not null]
  upvoteSerieReviews UpvoteSerieReview [not null]
  downvoteSerieReviews DownvoteSerieReview [not null]
  listItems ListSerie [not null]
  listActivities ListActivitySerie [not null]
}

Table UpvoteSerieReview {
  id Int [pk, increment]
  userId Int [not null]
  serieId Int [not null]
  serieReviewId Int [not null]
  user User [not null]
  serie Serie [not null]
  serieReview SerieReview

  indexes {
    (userId, serieId, serieReviewId) [unique]
  }
}

Table DownvoteSerieReview {
  id Int [pk, increment]
  userId Int [not null]
  serieId Int [not null]
  serieReviewId Int [not null]
  user User [not null]
  serie Serie [not null]
  serieReview SerieReview

  indexes {
    (userId, serieId, serieReviewId) [unique]
  }
}

Table SerieReview {
  id Int [pk, increment]
  content String
  rating Float
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime
  userId Int [not null]
  serieId Int [not null]
  user User [not null]
  serie Serie [not null]
  upvotes UpvoteSerieReview [not null]
  downvotes DownvoteSerieReview [not null]

  indexes {
    (userId, serieId) [unique]
  }
}

Table SerieGenre {
  id Int [pk, increment]
  serieId Int [not null]
  genreId Int [not null]
  serie Serie [not null]
  genre Genre [not null]

  indexes {
    (serieId, genreId) [unique]
  }
}

Table CastSerie {
  id Int [pk, increment]
  serieId Int [not null]
  actorId Int [not null]
  serie Serie [not null]
  actor Actor [not null]

  indexes {
    (serieId, actorId) [unique]
  }
}

Table CrewSerie {
  id Int [pk, increment]
  serieId Int [not null]
  crewId Int [not null]
  serie Serie [not null]
  crew Crew [not null]

  indexes {
    (serieId, crewId) [unique]
  }
}

Table User {
  id Int [pk, increment]
  userName String [unique, not null]
  email String [unique, not null]
  password String
  role UserType [not null, default: 'User']
  bio String
  age Int
  birthday DateTime
  gender Gender [not null, default: 'Male']
  phone String [not null, default: '+11234567890']
  countryFrom String [not null, default: 'United States']
  active Boolean [not null, default: false]
  canResetPassword Boolean [not null, default: false]
  subscribed Boolean [not null, default: false]
  resetPasswordTokens ResetPasswordToken [not null]
  activateTokens ActivateToken [not null]
  accounts Account [not null]
  sessions Session [not null]
  favMovies UserMovieFavorite [not null]
  favSeries UserSerieFavorite [not null]
  favGenres UserGenreFavorite [not null]
  favSeasons UserSeasonFavorite [not null]
  favEpisodes UserEpisodeFavorite [not null]
  favActors UserActorFavorite [not null]
  favCrew UserCrewFavorite [not null]
  ratingsInMovie UserMovieRating [not null]
  ratingsInSerie UserSerieRating [not null]
  ratingsInSeason UserSeasonRating [not null]
  ratingsInEpisode UserEpisodeRating [not null]
  ratingsInActor UserActorRating [not null]
  ratingsInCrew UserCrewRating [not null]
  movieReviews MovieReview [not null]
  serieReviews SerieReview [not null]
  seasonReviews SeasonReview [not null]
  episodeReviews EpisodeReview [not null]
  actorReviews ActorReview [not null]
  crewReviews CrewReview [not null]
  movieReviewsUpvoted UpvoteMovieReview [not null]
  movieReviewsDownvoted DownvoteMovieReview [not null]
  serieReviewsUpvoted UpvoteSerieReview [not null]
  serieReviewsDownvoted DownvoteSerieReview [not null]
  seasonReviewsUpvoted UpvoteSeasonReview [not null]
  seasonReviewsDownvoted DownvoteSeasonReview [not null]
  episodeReviewsUpvoted UpvoteEpisodeReview [not null]
  episodeReviewsDownvoted DownvoteEpisodeReview [not null]
  actorReviewsUpvoted UpvoteActorReview [not null]
  actorReviewsDownvoted DownvoteActorReview [not null]
  crewReviewsUpvoted UpvoteCrewReview [not null]
  crewReviewsDownvoted DownvoteCrewReview [not null]
  avatar Avatar
  followers UserFollow [not null]
  following UserFollow [not null]
  inboxes UserInbox [not null]
  messagesSent Message [not null]
  messagesReceived Message [not null]
  notificationsReceived Notification [not null]
  notificationsSent Notification [not null]
  forumTopics ForumTopic [not null]
  forumPosts ForumPost [not null]
  forumReplies ForumReply [not null]
  forumTopicUpvotes UpvoteForumTopic [not null]
  forumTopicDownvotes DownvoteForumTopic [not null]
  forumPostUpvotes UpvoteForumPost [not null]
  forumPostDownvotes DownvoteForumPost [not null]
  forumReplyUpvotes UpvoteForumReply [not null]
  forumReplyDownvotes DownvoteForumReply [not null]
  forumTopicsBookmarked UserForumTopicFavorite [not null]
  forumTopicsWatched UserForumTopicWatch [not null]
  forumModeratedCategories UserForumModerator [not null]
  attachments Attachment [not null]
  reportedContentCreated ReportedContent [not null]
  reportedContentReceived ReportedContent [not null]
  moderationLogsCreated ModerationLog [not null]
  moderationLogsTargeted ModerationLog [not null]
  forumStats ForumUserStats
  topicsClosed ForumTopic [not null]
  postsAnswered ForumPost [not null]
  postsEdited ForumPostHistory [not null]
  repliesEdited ForumReplyHistory [not null]
  postsDeleted ForumPost [not null]
  lists List [not null]
  sharedLists ListShare [not null]
  listStats UserListStats
  movieActivities ListActivityMovie [not null]
  serieActivities ListActivitySerie [not null]
  seasonActivities ListActivitySeason [not null]
  episodeActivities ListActivityEpisode [not null]
  actorActivities ListActivityActor [not null]
  crewActivities ListActivityCrew [not null]
  addedMovieItems ListMovie [not null]
  addedSerieItems ListSerie [not null]
  addedSeasonItems ListSeason [not null]
  addedEpisodeItems ListEpisode [not null]
  addedActorItems ListActor [not null]
  addedCrewItems ListCrew [not null]
}

Table Avatar {
  id Int [pk, increment]
  photoSrc String [not null]
  userId Int [unique, not null]
  user User [not null]
}

Table UserFollow {
  id Int [pk, increment]
  state FollowState [not null, default: 'pending']
  followerId Int [not null]
  followingId Int [not null]
  follower User [not null]
  following User [not null]

  indexes {
    (followerId, followingId) [unique]
  }
}

Table ForumUserStats {
  id Int [pk, increment]
  userId Int [unique, not null]
  user User [not null]
  topicCount Int [not null, default: 0]
  postCount Int [not null, default: 0]
  replyCount Int [not null, default: 0]
  upvotesReceived Int [not null, default: 0]
  reputation Int [not null, default: 0]
  lastPostAt DateTime
}

Table UserListStats {
  id Int [pk, increment]
  userId Int [unique, not null]
  totalLists Int [not null, default: 0]
  totalItems Int [not null, default: 0]
  sharedLists Int [not null, default: 0]
  lastListAt DateTime
  user User [not null]
}

Table UserMovieFavorite {
  id Int [pk, increment]
  userId Int [not null]
  movieId Int [not null]
  user User [not null]
  movie Movie [not null]

  indexes {
    (userId, movieId) [unique]
  }
}

Table UserGenreFavorite {
  id Int [pk, increment]
  userId Int [not null]
  genreId Int [not null]
  user User [not null]
  genre Genre [not null]

  indexes {
    (userId, genreId) [unique]
  }
}

Table UserSerieFavorite {
  id Int [pk, increment]
  userId Int [not null]
  serieId Int [not null]
  user User [not null]
  serie Serie [not null]

  indexes {
    (userId, serieId) [unique]
  }
}

Table UserEpisodeFavorite {
  id Int [pk, increment]
  userId Int [not null]
  episodeId Int [not null]
  user User [not null]
  episode Episode [not null]

  indexes {
    (userId, episodeId) [unique]
  }
}

Table UserSeasonFavorite {
  id Int [pk, increment]
  userId Int [not null]
  seasonId Int [not null]
  user User [not null]
  season Season [not null]

  indexes {
    (userId, seasonId) [unique]
  }
}

Table UserActorFavorite {
  id Int [pk, increment]
  userId Int [not null]
  actorId Int [not null]
  user User [not null]
  actor Actor [not null]

  indexes {
    (userId, actorId) [unique]
  }
}

Table UserCrewFavorite {
  id Int [pk, increment]
  userId Int [not null]
  crewId Int [not null]
  user User [not null]
  crew Crew [not null]

  indexes {
    (userId, crewId) [unique]
  }
}

Table UserMovieRating {
  id Int [pk, increment]
  rating Float [not null]
  userId Int [not null]
  movieId Int [not null]
  user User [not null]
  movie Movie [not null]

  indexes {
    (userId, movieId) [unique]
  }
}

Table UserSerieRating {
  id Int [pk, increment]
  rating Float [not null]
  userId Int [not null]
  serieId Int [not null]
  user User [not null]
  serie Serie [not null]

  indexes {
    (userId, serieId) [unique]
  }
}

Table UserSeasonRating {
  id Int [pk, increment]
  rating Float [not null]
  userId Int [not null]
  seasonId Int [not null]
  user User [not null]
  season Season [not null]

  indexes {
    (userId, seasonId) [unique]
  }
}

Table UserEpisodeRating {
  id Int [pk, increment]
  rating Float [not null]
  userId Int [not null]
  episodeId Int [not null]
  user User [not null]
  episode Episode [not null]

  indexes {
    (userId, episodeId) [unique]
  }
}

Table UserActorRating {
  id Int [pk, increment]
  rating Float [not null]
  userId Int [not null]
  actorId Int [not null]
  user User [not null]
  actor Actor [not null]

  indexes {
    (userId, actorId) [unique]
  }
}

Table UserCrewRating {
  id Int [pk, increment]
  rating Float [not null]
  userId Int [not null]
  crewId Int [not null]
  user User [not null]
  crew Crew [not null]

  indexes {
    (userId, crewId) [unique]
  }
}

Table ForumTagToForumTopic {
  topicsId Int [ref: > ForumTopic.id]
  tagsId Int [ref: > ForumTag.id]
}

Enum PostType {
  Normal
  Announcement
  Sticky
  Question
  Answered
}

Enum TopicStatus {
  Open
  Closed
  Archived
}

Enum ListActionType {
  Created
  Updated
  Deleted
  ItemAdded
  ItemRemoved
  Shared
  Unshared
}

Enum ContentType {
  movie
  serie
  season
  episode
  actor
  crew
  user
}

Enum ModerationAction {
  DeleteReview
  DeleteComment
  BanUser
  WarnUser
}

Enum ReportType {
  Review
  Comment
  User
  Message
  Other
}

Enum ReportStatus {
  Pending
  Resolved
  Rejected
}

Enum NotificationStatus {
  read
  unread
}

Enum NotificationType {
  follow_request
  message_received
  liked_review
  disliked_review
}

Enum UserType {
  User
  Admin
}

Enum FollowState {
  pending
  accepted
  rejected
}

Enum Gender {
  Male
  Female
}

Ref: ActorReview.userId > User.id [delete: Cascade]

Ref: ActorReview.actorId > Actor.id [delete: Cascade]

Ref: UpvoteActorReview.userId > User.id [delete: Cascade]

Ref: UpvoteActorReview.actorId > Actor.id [delete: Cascade]

Ref: UpvoteActorReview.actorReviewId > ActorReview.id [delete: Cascade]

Ref: DownvoteActorReview.userId > User.id [delete: Cascade]

Ref: DownvoteActorReview.actorId > Actor.id [delete: Cascade]

Ref: DownvoteActorReview.actorReviewId > ActorReview.id [delete: Cascade]

Ref: Account.userId > User.id [delete: Cascade]

Ref: Session.userId > User.id [delete: Cascade]

Ref: ActivateToken.userId > User.id [delete: Cascade]

Ref: ResetPasswordToken.userId > User.id [delete: Cascade]

Ref: CrewReview.userId > User.id [delete: Cascade]

Ref: CrewReview.crewId > Crew.id [delete: Cascade]

Ref: UpvoteCrewReview.userId > User.id [delete: Cascade]

Ref: UpvoteCrewReview.crewId > Crew.id [delete: Cascade]

Ref: UpvoteCrewReview.crewReviewId > CrewReview.id [delete: Cascade]

Ref: DownvoteCrewReview.userId > User.id [delete: Cascade]

Ref: DownvoteCrewReview.crewId > Crew.id [delete: Cascade]

Ref: DownvoteCrewReview.crewReviewId > CrewReview.id [delete: Cascade]

Ref: Episode.seasonId > Season.id [delete: Cascade]

Ref: EpisodeReview.userId > User.id [delete: Cascade]

Ref: EpisodeReview.episodeId > Episode.id [delete: Cascade]

Ref: UpvoteEpisodeReview.userId > User.id [delete: Cascade]

Ref: UpvoteEpisodeReview.episodeId > Episode.id [delete: Cascade]

Ref: UpvoteEpisodeReview.episodeReviewId > EpisodeReview.id [delete: Cascade]

Ref: DownvoteEpisodeReview.userId > User.id [delete: Cascade]

Ref: DownvoteEpisodeReview.episodeId > Episode.id [delete: Cascade]

Ref: DownvoteEpisodeReview.episodeReviewId > EpisodeReview.id [delete: Cascade]

Ref: ForumCategory.lastPostId - ForumPost.id [delete: Set Null]

Ref: UserForumModerator.userId > User.id [delete: Cascade]

Ref: UserForumModerator.categoryId > ForumCategory.id [delete: Cascade]

Ref: ForumPost.topicId > ForumTopic.id [delete: Cascade]

Ref: ForumPost.userId > User.id [delete: Cascade]

Ref: ForumPost.answeredById > User.id [delete: Cascade]

Ref: ForumPost.deletedById > User.id [delete: Cascade]

Ref: Attachment.userId > User.id [delete: Cascade]

Ref: Attachment.postId > ForumPost.id [delete: Cascade]

Ref: UpvoteForumPost.userId > User.id [delete: Cascade]

Ref: UpvoteForumPost.postId > ForumPost.id [delete: Cascade]

Ref: DownvoteForumPost.userId > User.id [delete: Cascade]

Ref: DownvoteForumPost.postId > ForumPost.id [delete: Cascade]

Ref: ForumPostHistory.postId > ForumPost.id [delete: Cascade]

Ref: ForumPostHistory.editedById > User.id

Ref: ForumReply.postId > ForumPost.id [delete: Cascade]

Ref: ForumReply.userId > User.id [delete: Cascade]

Ref: UpvoteForumReply.userId > User.id [delete: Cascade]

Ref: UpvoteForumReply.replyId > ForumReply.id [delete: Cascade]

Ref: DownvoteForumReply.userId > User.id [delete: Cascade]

Ref: DownvoteForumReply.replyId > ForumReply.id [delete: Cascade]

Ref: ForumReplyHistory.replyId > ForumReply.id [delete: Cascade]

Ref: ForumReplyHistory.editedById > User.id

Ref: ForumTopic.closedById > User.id

Ref: ForumTopic.categoryId > ForumCategory.id [delete: Cascade]

Ref: ForumTopic.userId > User.id

Ref: UserForumTopicWatch.userId > User.id [delete: Cascade]

Ref: UserForumTopicWatch.topicId > ForumTopic.id [delete: Cascade]

Ref: UserForumTopicFavorite.userId > User.id [delete: Cascade]

Ref: UserForumTopicFavorite.topicId > ForumTopic.id [delete: Cascade]

Ref: UpvoteForumTopic.userId > User.id [delete: Cascade]

Ref: UpvoteForumTopic.topicId > ForumTopic.id [delete: Cascade]

Ref: DownvoteForumTopic.userId > User.id [delete: Cascade]

Ref: DownvoteForumTopic.topicId > ForumTopic.id [delete: Cascade]

Ref: List.userId > User.id [delete: Cascade]

Ref: ListShare.listId > List.id [delete: Cascade]

Ref: ListShare.userId > User.id [delete: Cascade]

Ref: ListMovie.listId > List.id [delete: Cascade]

Ref: ListMovie.movieId > Movie.id [delete: Cascade]

Ref: ListMovie.userId > User.id

Ref: ListSerie.listId > List.id [delete: Cascade]

Ref: ListSerie.serieId > Serie.id [delete: Cascade]

Ref: ListSerie.userId > User.id

Ref: ListSeason.listId > List.id [delete: Cascade]

Ref: ListSeason.seasonId > Season.id [delete: Cascade]

Ref: ListSeason.userId > User.id

Ref: ListEpisode.listId > List.id [delete: Cascade]

Ref: ListEpisode.episodeId > Episode.id [delete: Cascade]

Ref: ListEpisode.userId > User.id

Ref: ListActor.listId > List.id [delete: Cascade]

Ref: ListActor.actorId > Actor.id [delete: Cascade]

Ref: ListActor.userId > User.id

Ref: ListCrew.listId > List.id [delete: Cascade]

Ref: ListCrew.crewId > Crew.id [delete: Cascade]

Ref: ListCrew.userId > User.id

Ref: ListActivityMovie.listId > List.id [delete: Cascade]

Ref: ListActivityMovie.movieId > Movie.id [delete: Cascade]

Ref: ListActivityMovie.userId > User.id [delete: Cascade]

Ref: ListActivitySerie.listId > List.id [delete: Cascade]

Ref: ListActivitySerie.serieId > Serie.id [delete: Cascade]

Ref: ListActivitySerie.userId > User.id [delete: Cascade]

Ref: ListActivitySeason.listId > List.id [delete: Cascade]

Ref: ListActivitySeason.seasonId > Season.id [delete: Cascade]

Ref: ListActivitySeason.userId > User.id [delete: Cascade]

Ref: ListActivityEpisode.listId > List.id [delete: Cascade]

Ref: ListActivityEpisode.episodeId > Episode.id [delete: Cascade]

Ref: ListActivityEpisode.userId > User.id [delete: Cascade]

Ref: ListActivityActor.listId > List.id [delete: Cascade]

Ref: ListActivityActor.actorId > Actor.id [delete: Cascade]

Ref: ListActivityActor.userId > User.id [delete: Cascade]

Ref: ListActivityCrew.listId > List.id [delete: Cascade]

Ref: ListActivityCrew.crewId > Crew.id [delete: Cascade]

Ref: ListActivityCrew.userId > User.id [delete: Cascade]

Ref: Message.receiverId > User.id [delete: Cascade]

Ref: Message.senderId > User.id [delete: Cascade]

Ref: Message.inboxId > Inbox.id [delete: Cascade]

Ref: UserInbox.userId > User.id [delete: Cascade]

Ref: UserInbox.inboxId > Inbox.id [delete: Cascade]

Ref: ReportedContent.reportingUserId > User.id

Ref: ReportedContent.reportedUserId > User.id

Ref: ModerationLog.moderatorUserId > User.id

Ref: ModerationLog.targetUserId > User.id

Ref: MovieReview.userId > User.id [delete: Cascade]

Ref: MovieReview.movieId > Movie.id [delete: Cascade]

Ref: UpvoteMovieReview.userId > User.id [delete: Cascade]

Ref: UpvoteMovieReview.movieId > Movie.id [delete: Cascade]

Ref: UpvoteMovieReview.movieReviewId > MovieReview.id [delete: Cascade]

Ref: DownvoteMovieReview.userId > User.id [delete: Cascade]

Ref: DownvoteMovieReview.movieId > Movie.id [delete: Cascade]

Ref: DownvoteMovieReview.movieReviewId > MovieReview.id [delete: Cascade]

Ref: CastMovie.movieId > Movie.id [delete: Cascade]

Ref: CastMovie.actorId > Actor.id [delete: Cascade]

Ref: CrewMovie.movieId > Movie.id [delete: Cascade]

Ref: CrewMovie.crewId > Crew.id [delete: Cascade]

Ref: MovieGenre.movieId > Movie.id [delete: Cascade]

Ref: MovieGenre.genreId > Genre.id [delete: Cascade]

Ref: Notification.userId > User.id [delete: Cascade]

Ref: Notification.senderId > User.id [delete: Cascade]

Ref: Season.serieId > Serie.id [delete: Cascade]

Ref: SeasonReview.userId > User.id [delete: Cascade]

Ref: SeasonReview.seasonId > Season.id [delete: Cascade]

Ref: UpvoteSeasonReview.userId > User.id [delete: Cascade]

Ref: UpvoteSeasonReview.seasonId > Season.id [delete: Cascade]

Ref: UpvoteSeasonReview.seasonReviewId > SeasonReview.id [delete: Cascade]

Ref: DownvoteSeasonReview.userId > User.id [delete: Cascade]

Ref: DownvoteSeasonReview.seasonId > Season.id [delete: Cascade]

Ref: DownvoteSeasonReview.seasonReviewId > SeasonReview.id [delete: Cascade]

Ref: UpvoteSerieReview.userId > User.id [delete: Cascade]

Ref: UpvoteSerieReview.serieId > Serie.id [delete: Cascade]

Ref: UpvoteSerieReview.serieReviewId > SerieReview.id [delete: Cascade]

Ref: DownvoteSerieReview.userId > User.id [delete: Cascade]

Ref: DownvoteSerieReview.serieId > Serie.id [delete: Cascade]

Ref: DownvoteSerieReview.serieReviewId > SerieReview.id [delete: Cascade]

Ref: SerieReview.userId > User.id [delete: Cascade]

Ref: SerieReview.serieId > Serie.id [delete: Cascade]

Ref: SerieGenre.serieId > Serie.id [delete: Cascade]

Ref: SerieGenre.genreId > Genre.id [delete: Cascade]

Ref: CastSerie.serieId > Serie.id [delete: Cascade]

Ref: CastSerie.actorId > Actor.id [delete: Cascade]

Ref: CrewSerie.serieId > Serie.id [delete: Cascade]

Ref: CrewSerie.crewId > Crew.id [delete: Cascade]

Ref: Avatar.userId - User.id [delete: Cascade]

Ref: UserFollow.followerId > User.id [delete: Cascade]

Ref: UserFollow.followingId > User.id [delete: Cascade]

Ref: ForumUserStats.userId - User.id [delete: Cascade]

Ref: UserListStats.userId - User.id [delete: Cascade]

Ref: UserMovieFavorite.userId > User.id [delete: Cascade]

Ref: UserMovieFavorite.movieId > Movie.id [delete: Cascade]

Ref: UserGenreFavorite.userId > User.id [delete: Cascade]

Ref: UserGenreFavorite.genreId > Genre.id [delete: Cascade]

Ref: UserSerieFavorite.userId > User.id [delete: Cascade]

Ref: UserSerieFavorite.serieId > Serie.id [delete: Cascade]

Ref: UserEpisodeFavorite.userId > User.id [delete: Cascade]

Ref: UserEpisodeFavorite.episodeId > Episode.id [delete: Cascade]

Ref: UserSeasonFavorite.userId > User.id [delete: Cascade]

Ref: UserSeasonFavorite.seasonId > Season.id [delete: Cascade]

Ref: UserActorFavorite.userId > User.id [delete: Cascade]

Ref: UserActorFavorite.actorId > Actor.id [delete: Cascade]

Ref: UserCrewFavorite.userId > User.id [delete: Cascade]

Ref: UserCrewFavorite.crewId > Crew.id [delete: Cascade]

Ref: UserMovieRating.userId > User.id [delete: Cascade]

Ref: UserMovieRating.movieId > Movie.id [delete: Cascade]

Ref: UserSerieRating.userId > User.id [delete: Cascade]

Ref: UserSerieRating.serieId > Serie.id [delete: Cascade]

Ref: UserSeasonRating.userId > User.id [delete: Cascade]

Ref: UserSeasonRating.seasonId > Season.id [delete: Cascade]

Ref: UserEpisodeRating.userId > User.id [delete: Cascade]

Ref: UserEpisodeRating.episodeId > Episode.id [delete: Cascade]

Ref: UserActorRating.userId > User.id [delete: Cascade]

Ref: UserActorRating.actorId > Actor.id [delete: Cascade]

Ref: UserCrewRating.userId > User.id [delete: Cascade]

Ref: UserCrewRating.crewId > Crew.id [delete: Cascade]