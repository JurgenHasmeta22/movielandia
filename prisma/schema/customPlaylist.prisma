enum PlaylistType {
  MOVIE
  SERIE
  SEASON
  EPISODE
  ACTOR
  CREW
}

model Playlist {
  id        Int                 @id @default(autoincrement())
  name      String
  type      PlaylistType
  userId    Int
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt

  // Relations
  user         User                   @relation(fields: [userId], references: [id], onDelete: Cascade)
  movieItems   PlaylistMovie[]
  serieItems   PlaylistSerie[]
  seasonItems  PlaylistSeason[]
  episodeItems PlaylistEpisode[]
  actorItems   PlaylistActor[]
  crewItems    PlaylistCrew[]
}

model PlaylistMovie {
  id                Int            @id @default(autoincrement())
  playlistId  Int
  movieId           Int

  playlist  Playlist   @relation(fields: [playlistId], references: [id], onDelete: Cascade)
  movie           Movie            @relation(fields: [movieId], references: [id], onDelete: Cascade)

  @@unique([playlistId, movieId])
}

model PlaylistSerie {
  id                Int            @id @default(autoincrement())
  playlistId  Int
  serieId           Int

  playlist  Playlist   @relation(fields: [playlistId], references: [id], onDelete: Cascade)
  serie           Serie            @relation(fields: [serieId], references: [id], onDelete: Cascade)

  @@unique([playlistId, serieId])
}

model PlaylistSeason {
  id                Int            @id @default(autoincrement())
  playlistId  Int
  seasonId          Int

  playlist  Playlist   @relation(fields: [playlistId], references: [id], onDelete: Cascade)
  season          Season           @relation(fields: [seasonId], references: [id], onDelete: Cascade)

  @@unique([playlistId, seasonId])
}

model PlaylistEpisode {
  id                Int            @id @default(autoincrement())
  playlistId  Int
  episodeId         Int

  playlist  Playlist   @relation(fields: [playlistId], references: [id], onDelete: Cascade)
  episode         Episode          @relation(fields: [episodeId], references: [id], onDelete: Cascade)

  @@unique([playlistId, episodeId])
}

model PlaylistActor {
  id                Int            @id @default(autoincrement())
  playlistId  Int
  actorId           Int

  playlist  Playlist   @relation(fields: [playlistId], references: [id], onDelete: Cascade)
  actor           Actor            @relation(fields: [actorId], references: [id], onDelete: Cascade)

  @@unique([playlistId, actorId])
}

model PlaylistCrew {
  id                Int            @id @default(autoincrement())
  playlistId  Int
  crewId            Int

  playlist  Playlist   @relation(fields: [playlistId], references: [id], onDelete: Cascade)
  crew            Crew             @relation(fields: [crewId], references: [id], onDelete: Cascade)

  @@unique([playlistId, crewId])
}
