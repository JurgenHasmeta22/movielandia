model Serie {
    id                   Int                   @id @default(autoincrement())
    title                String                @default("")
    photoSrc             String                @default("")
    photoSrcProd         String                @default("")
    trailerSrc           String                @default("")
    description          String                @default("")
    dateAired            String                @default("01/01/2020")
    ratingImdb           Float                 @default(5.0)
    cast                 CastSerie[]
    seasons              Season[]
    reviews              SerieReview[]
    genres               SerieGenre[]
    usersWhoBookmarkedIt UserSerieFavorite[]
    usersWhoRatedIt      UserSerieRating[]
    upvoteSerieReviews   UpvoteSerieReview[]
    downvoteSerieReviews DownvoteSerieReview[]
}

model SerieGenre {
    id      Int   @id @default(autoincrement())
    serieId Int
    genreId Int
    serie   Serie @relation(fields: [serieId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    genre   Genre @relation(fields: [genreId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model CastSerie {
    id      Int   @id @default(autoincrement())
    serieId Int
    actorId Int
    serie   Serie @relation(fields: [serieId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    actor   Actor @relation(fields: [actorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model UpvoteSerieReview {
    id            Int          @id @default(autoincrement())
    userId        Int
    serieId       Int
    serieReviewId Int
    user          User         @relation(fields: [userId], references: [id], onDelete: Cascade)
    serie         Serie        @relation(fields: [serieId], references: [id], onDelete: Cascade)
    serieReview   SerieReview? @relation(fields: [serieReviewId], references: [id], onDelete: Cascade)
}

model DownvoteSerieReview {
    id            Int          @id @default(autoincrement())
    userId        Int
    serieId       Int
    serieReviewId Int
    user          User         @relation(fields: [userId], references: [id], onDelete: Cascade)
    serie         Serie        @relation(fields: [serieId], references: [id], onDelete: Cascade)
    serieReview   SerieReview? @relation(fields: [serieReviewId], references: [id], onDelete: Cascade)
}

model SerieReview {
    id        Int                   @id @default(autoincrement())
    content   String                @default("")
    rating    Float?
    createdAt DateTime              @default(now())
    updatedAt DateTime?
    userId    Int
    serieId   Int
    user      User                  @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    serie     Serie                 @relation(fields: [serieId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    upvotes   UpvoteSerieReview[]
    downvotes DownvoteSerieReview[]
}
